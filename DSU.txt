class DSU{ 
vector<int>rank,parent;
 
 public:
  DSU(int n){
  rank.resize(n+1);parent.resize(n+1);
  for(int a=1;a<=n;a++)rank[a]=0;for(int a=1;a<=n;a++)parent[a]=a;
  }
int Ultparent(int a){
      if(parent[a] ==a)return a;
      else parent[a]= Ultparent(parent[a]);
}

void join(int x,int y){ 
int xp = Ultparent(x,parent); int yp = Ultparent(y,parent);
if(xp==yp){return;}
 if(xp>yp)swap(xp,yp);
 parent[xp] = yp;rank[yp]++;
}
};